apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
android {
    signingConfigs {
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.zhuoting.health"
        minSdkVersion 18
        targetSdkVersion 22
        versionCode 12
        versionName "1.85"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 不声明ndk标签,项目默认会创建一个libapp.so的文件
//        ndk {
//            // 声明创建so库的文件名,会自动添加lib前缀, 添加了前缀,不会自动添加
//            moduleName "libnative-lib"
//
//            //声明启用Android日志, 在c/c++的源文件中使用的#include <android/log.h> 日志将得到输出
//            ldLibs "log"
//            // 声明创建指定cpu架构的so库, 不声明的话, 默认(gradle 1.5.0)会生成4中架构 多一种mips架构
//            // 具体cpu架构的区别请参考:
//            // for detailed abiFilter descriptions, refer to "Supported ABIs" @
//            // https://developer.android.com/ndk/guides/abis.html#sa
//            abiFilters "armeabi", "armeabi-v7a", "x86"
//        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

//        sit {
//            debuggable true
//        }
    }

    sourceSets {
        main {
            // 1. 配置在根目录libs下可以加载第三方so库, (最好不要创建jniLibs, 在众多的开源库中可能会引起冲突,还没发现)
            // 2. 运行时会自动将libs目录下的so库拷贝到指定目录
            // 3. 如果自己创建的so不需要重新编译,可以将(app/build/intermediates/transforms)生成的so拷贝到这个目录
            jniLibs.srcDirs = ['libs']
            // 如果是单个文件夹 可以直接这样如下配置
//             jniLibs.srcDir 'libs'
        }
    }
}
buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0-alpha13'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile('org.simpleframework:simple-xml:2.7.1') {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'xpp3', module: 'xpp3'
    }
    compile files('libs/achartengine-1.1.0.jar')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
//    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'de.halfbit:pinned-section-listview:1.0.0'
    compile 'no.nordicsemi.android:dfu:1.3.0'
    compile 'no.nordicsemi.android.support.v18:scanner:1.0.0'
    compile 'no.nordicsemi.android:log:2.1.0'
    compile 'com.lai.weavey:dialog:2.0.1'
    compile 'com.github.addappcn:android-pickers:1.0.1'
    compile 'com.contrarywind:Android-PickerView:3.2.5'
    compile 'com.baoyz.actionsheet:library:1.1.7'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okio:okio:1.7.0'
    compile 'com.googlecode.plist:dd-plist:1.16'
    testCompile 'junit:junit:4.12'
    compile 'pub.devrel:easypermissions:1.0.1'
    compile files('libs/MobCommons-2017.0608.1618.jar')
    compile files('libs/MobTools-2017.0608.1618.jar')
    compile files('libs/ShareSDK-Core-3.0.0.jar')
    compile files('libs/ShareSDK-QQ-3.0.0.jar')
    compile files('libs/ShareSDK-QZone-3.0.0.jar')
    compile files('libs/ShareSDK-SinaWeibo-3.0.0.jar')
    compile files('libs/ShareSDK-TencentWeibo-3.0.0.jar')
    compile files('libs/ShareSDK-Wechat-3.0.0.jar')
    compile files('libs/ShareSDK-Wechat-Core-3.0.0.jar')
    compile files('libs/ShareSDK-Wechat-Favorite-3.0.0.jar')
    compile files('libs/ShareSDK-Wechat-Moments-3.0.0.jar')
    compile 'com.inuker.bluetooth:library:1.4.0'
    compile 'com.jaredrummler:android-processes:1.1.1'
    compile 'org.greenrobot:eventbus:3.0.0'

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }
//    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}


















